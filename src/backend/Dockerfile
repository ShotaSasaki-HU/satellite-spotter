# Dockerfile

# 1. ベースイメージの指定
# Python 3.13のスリム版を土台として使用
# ライブラリのインストールエラーなどあれば，3.11に下げた方がいいかも．
FROM python:3.13-slim

# 2. ワーキングディレクトリの指定
# コンテナ内の/appディレクトリで作業します．
WORKDIR /app

# 3. 依存関係のインストール（キャッシュ利用）
# まず，アプリのコードなどより先に，変更頻度の低いrequirements.txtだけをコピーし，ライブラリをインストールする．
# COPYコマンドは，ファイルに変更があればキャッシュは使用せず，新規にコピーを行う．
# requirements.txtに変更がなかった場合は，重いインストールがスキップされ，ビルドが高速になる．
# COPY <コピー元（ビルドコンテキストの何か）> <コピー先（コンテナ内のワーキングディレクトリの何か）>
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# 4. アプリケーションコードのコピー
# 変更頻度の高い残りのファイルをコンテナにコピーする．
# ただし，.dockerignoreファイルに記載されたものは除外される．
# COPY . .は，「ローカルのappディレクトリの中身を，コンテナ内の/appディレクトリにコピーしてください．」という意味．
COPY ./app /app

# 5. コンテナ起動時に実行するコマンド
# uvicornサーバーを起動します．--host 0.0.0.0 はコンテナ外部からのアクセスを許可するために必須です．
CMD ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "80"]
